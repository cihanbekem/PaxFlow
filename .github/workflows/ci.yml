name: CI

on: [push, pull_request]

jobs:
  backend-tests:
    if: hashFiles('backend/tests/**/*.py') != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt pytest
      - run: pytest -q

  ui-tests:
    if: hashFiles('ui/package.json') != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - run: |
          cd ui
          npm ci
          npm test -- --run

  docker-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: paxboard:test

      - name: Run container
        run: |
          docker run -d --name paxboard -p 8000:8000 \
            -e CSV_PATH=/tmp/flight_data.csv paxboard:test
          docker exec paxboard sh -c 'echo "CheckDate" > /tmp/flight_data.csv'

      - name: Wait for /health
        run: |
          for i in {1..40}; do
            if curl -sf http://127.0.0.1:8000/health > /dev/null; then exit 0; fi
            sleep 1
          done
          echo "Service did not become healthy in time" >&2
          exit 1

      - name: Probe endpoints
        run: |
          curl -sf "http://127.0.0.1:8000/api/latest?minutes=1" >/dev/null
          code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8000/ui)
          [ "$code" = "200" ] || [ "$code" = "304" ]

      - name: Cleanup
        if: always()
        run: docker rm -f paxboard
